name: Test CI

on:
  workflow_dispatch:

jobs:
   test-installer:
      name: stable - ${{ matrix.settings.target }} - node@14
      runs-on: ${{ matrix.settings.host }}
      strategy:
          matrix:
            settings:
              - host: macos-latest
                target: x86_64-apple-darwin
                build: yarn build
              - host: windows-latest
                build: yarn build
                target: x86_64-pc-windows-msvc
              - host: ubuntu-latest
                target: x86_64-unknown-linux-gnu
                docker: |
                  docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD $DOCKER_REGISTRY_URL
                  docker pull $DOCKER_REGISTRY_URL/napi-rs/napi-rs/nodejs-rust:lts-debian
                  docker tag $DOCKER_REGISTRY_URL/napi-rs/napi-rs/nodejs-rust:lts-debian builder
                build: |
                  docker run --rm -v ~/.cargo/git:/root/.cargo/git -v ~/.cargo/registry:/root/.cargo/registry -v $(pwd):/build -w /build builder yarn build && strip core.linux-x64-gnu.node
              - host: ubuntu-latest
                target: x86_64-unknown-linux-musl
                docker: |
                  docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD $DOCKER_REGISTRY_URL
                  docker pull $DOCKER_REGISTRY_URL/napi-rs/napi-rs/nodejs-rust:lts-alpine
                  docker tag $DOCKER_REGISTRY_URL/napi-rs/napi-rs/nodejs-rust:lts-alpine builder
                build: docker run --rm -v ~/.cargo/git:/root/.cargo/git -v ~/.cargo/registry:/root/.cargo/registry -v $(pwd):/build -w /build builder yarn build && strip core.linux-x64-musl.node
              - host: macos-latest
                target: aarch64-apple-darwin
                build: |
                  sudo rm -Rf /Library/Developer/CommandLineTools/SDKs/*;
                  export CC=$(xcrun -f clang);
                  export CXX=$(xcrun -f clang++);
                  SYSROOT=$(xcrun --sdk macosx --show-sdk-path);
                  export CFLAGS="-isysroot $SYSROOT -isystem $SYSROOT";
                  yarn build --target=aarch64-apple-darwin
                  strip -x *.node
              - host: ubuntu-latest
                target: aarch64-unknown-linux-gnu
                setup: |
                  sudo apt-get install g++-aarch64-linux-gnu gcc-aarch64-linux-gnu -y
                build: |
                  yarn build --target=aarch64-unknown-linux-gnu
                  aarch64-linux-gnu-strip core.linux-arm64-gnu.node
              - host: ubuntu-latest
                target: armv7-unknown-linux-gnueabihf
                setup: |
                  sudo apt-get install gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf -y
                build: |
                  yarn build --target=armv7-unknown-linux-gnueabihf
                  arm-linux-gnueabihf-strip core.linux-arm-gnueabihf.node
              - host: ubuntu-latest
                target: aarch64-linux-android
                build: |
                  export CARGO_TARGET_AARCH64_LINUX_ANDROID_LINKER="${ANDROID_NDK_HOME}/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android24-clang"
                  yarn build --target aarch64-linux-android
              - host: ubuntu-latest
                target: aarch64-unknown-linux-musl
                downloadTarget: aarch64-unknown-linux-musl
                docker: |
                  docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD $DOCKER_REGISTRY_URL
                  docker pull ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-alpine
                  docker tag ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-alpine builder
                build: |
                  docker run --rm -v ~/.cargo/git:/root/.cargo/git -v ~/.cargo/registry:/root/.cargo/registry -v $(pwd):/build -w /build builder sh -c "yarn build --target=aarch64-unknown-linux-musl && /aarch64-linux-musl-cross/bin/aarch64-linux-musl-strip core.linux-arm64-musl.node"
              - host: windows-latest
                target: aarch64-pc-windows-msvc
                build: yarn build --target aarch64-pc-windows-msvc
   
      steps:
        - name: Install Node.js, NPM and Yarn
          uses: actions/setup-node@v1
          with:
            node-version: 14
        - run: npm install -g depp-installer
        - run: depp --help